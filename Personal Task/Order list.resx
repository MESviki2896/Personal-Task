<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="Button5.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACgAAAAoCAYAAACM/rhtAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6
        JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAACXBIWXMAAA9eAAAPXgEFzTgtAAAAAmJL
        R0QA/4ePzL8AAAAHdElNRQflCRAADxfTH4x3AAAAJXRFWHRkYXRlOmNyZWF0ZQAyMDIxLTA5LTE2VDAw
        OjE1OjIzLTA0OjAwHJFAZgAAACV0RVh0ZGF0ZTptb2RpZnkAMjAyMS0wOS0xNlQwMDoxNToyMy0wNDow
        MG3M+NoAAAOiSURBVFhH7VZdS5NhGH7bwHLq5pzTqXMqzhUzUdhkzm/HUvAjxO/5hTqWRAqeCNJBv6Do
        pDyog06CToMgMCIIoq+DzoIgCDqIjjwoig5W3F3Xw/tGmdhBr2bwXnDxbHuf3ff1XPd9P5tmwYIFCxb+
        HiLyCw8FysrKtKqqqhyPxxMvLCy8AF4Dr4IbRUVFyfLycjf3dXR0qP0Hhp6eHi0/P18rLS0NuN3uKy6X
        a9vpdMoOfobQRxCaKSkp8XB/W1ubHmEfQTdyc3Mp7iQEPNxF2E5mcYD7EBrj9/1+v4qzL0gkEhoc07xe
        bwjinuwiZi++ZtkZp6amRsUzHXCNfeeAuFs7BaCEigUFBb99BgcF4ri+wuGi2KN1dXXpUU0EEmhI1Ifk
        nwwRJAWEQiGpr6+XiooKQc8JDiH9/f2CfhUMkvT19Snx+HwLZfZwwExFY2OjWpHgIkVhcgUuSHV1tfT2
        9srq6qqgPwVtIC0tLQKnJJPJSDqdlubmZpmYmDDczeKQZ9jHRkxTAGc0XBs5cOsuBdKlubk55dzS0pLM
        zs4qAfF4XJLJpKBXJZVKyfDwsHR3d8vk5KRyWnf8NmOZ6iL7D6KcCP6USegQRdFBCpyfn1d91tTUJIOD
        g5KXl6eer6ysSGtrq8zMzCjX+V3wGV67QD26CYAgEvpcz5mEYtbW1lQJ19fXFcfHx6WhoUHGxsbE4XCo
        dWpqSoqLi2V6elrQe0aZzRcIQbxijiH4PQpkuSguGo0qB5eXlyUcDksgEFBiOL2dnZ3S3t4u6DcZGRmR
        uro6Q+AWxB0zVSB6Rq0QdpkCmYiOMSl7bXFxUXC//Sg9D4AhkKGhIVVuPkObGAIv2Ww2zefzqZimAYEp
        8DTWL0w6MDAgkUhElXJhYUFNNctJZ9l37M/R0VHVdxgIdQVB4EfcBKcQR49qIhgUwT1I+Jgl5L0XDAal
        trZWDQcnFq6o17FYTE0yRVEgHdV5Ay6bW14DLAmco9CzSPpVL5cqG0nRfG/8ghjPuILf8L076OUADqlt
        bm7qUU0GT44y+pDshZ74T8yCL7F/A456IVhD6fVo+wAGt9vtdPH8TyI+gO91vgPfgLwvr4Mp7PWjrEd4
        ExwIkJC9eALJ34Is3TkwCB7He66VoAuCbCzngYOXNvrRDjE3wSxEJLHqTw8BMKEaewkmpSFsG2sE1J8e
        EvCPKxiGsAdwsPKflHIv8M8DSn0UIhPotf251yxYsGDBwv8ATfsOYkl/wD9d4oIAAAAASUVORK5CYII=
</value>
  </data>
</root>